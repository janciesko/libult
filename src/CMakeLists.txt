set(PREFIX_BACKEND_SRC_PATH ${CMAKE_SOURCE_DIR}/src/impl)
set(PTHREADS_BACKEND_PATH "${PREFIX_BACKEND_SRC_PATH}/pthreads")
set(QTHREADS_BACKEND_PATH "${PREFIX_BACKEND_SRC_PATH}/qthreads")
set(ARGOBOTS_BACKEND_PATH "${PREFIX_BACKEND_SRC_PATH}/argobots")

if(LIBULT_ENABLE_PTHREADS)
  set(BACKEND_NAME "PTHREADS")
  list(APPEND BACKENDS ${BACKEND_NAME})
  list(APPEND BACKEND_SOURCE_DIRS ${PTHREADS_BACKEND_PATH})
endif()
if(LIBULT_ENABLE_QTHREADS)
  find_package(QTHREADS REQUIRED)
  set(BACKEND_NAME "QTHREADS")
  list(APPEND BACKENDS ${BACKEND_NAME})
  list(APPEND BACKEND_SOURCE_DIRS ${QTHREADS_BACKEND_PATH})
endif()
if(LIBULT_ENABLE_ARGOBOTS)
  find_package(ARGOBOTS REQUIRED)
  set(BACKEND_NAME "ARGOBOTS")
  list(APPEND BACKENDS ${BACKEND_NAME})
  list(APPEND BACKEND_SOURCE_DIRS ${ARGOBOTS_BACKEND_PATH})
endif()

list(LENGTH BACKENDS N_BACKENDS)
if (NOT ${N_BACKENDS} EQUAL "1")
  message(FATAL_ERROR "Must give a single valid backend. ${N_BACKENDS} given.")
endif()

list (APPEND SOURCE_DIRS ${CMAKE_SOURCE_DIR}/src/)

foreach(DIR ${SOURCE_DIRS} ${BACKEND_SOURCE_DIRS})
  file(GLOB DIR_SRCS ${DIR}/*.c)
  file(GLOB DIR_HDRS ${DIR}/*.h)
  list(APPEND SOURCES ${DIR_SRCS})
  list(APPEND HEADERS ${DIR_HDRS})
endforeach()

add_library(${PROJECT_NAME} ${SOURCES} ${HEADERS})
target_include_directories(${PROJECT_NAME} PUBLIC .)
target_link_libraries(${PROJECT_NAME} PUBLIC ${PUBLIC_DEPS})


IF (LIBULT_ENABLE_TESTS)
  enable_testing()
  add_subdirectory(test)
ENDIF()